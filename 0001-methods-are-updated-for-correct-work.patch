From faae9e3d763c12eeb0318e30e5d2d9bd8ca2f9c0 Mon Sep 17 00:00:00 2001
From: mista <mr.bezdar@gmail.com>
Date: Sat, 2 Dec 2023 19:37:07 +0300
Subject: [PATCH] methods are updated for correct work: getDataPoint, getRatio
 and main in client3.py

---
 ...methods-are-updated-for-correct-work.patch | 48 +++++++++++
 client3.py                                    | 21 ++++-
 client_test.py                                | 85 ++++++++++++++++---
 3 files changed, 137 insertions(+), 17 deletions(-)
 create mode 100644 0001-methods-are-updated-for-correct-work.patch

diff --git a/0001-methods-are-updated-for-correct-work.patch b/0001-methods-are-updated-for-correct-work.patch
new file mode 100644
index 0000000..2fb8860
--- /dev/null
+++ b/0001-methods-are-updated-for-correct-work.patch
@@ -0,0 +1,48 @@
+From e709b0c1fb72f8d66f74a68bf43ddf04788ecbcb Mon Sep 17 00:00:00 2001
+From: mista <mr.bezdar@gmail.com>
+Date: Sat, 2 Dec 2023 11:45:33 +0300
+Subject: [PATCH] methods are updated for correct work: getDataPoint, getRatio
+ and main in client3.py
+
+---
+ client3.py | 10 +++++++---
+ 1 file changed, 7 insertions(+), 3 deletions(-)
+
+diff --git a/client3.py b/client3.py
+index 3fc09b7..864d171 100644
+--- a/client3.py
++++ b/client3.py
+@@ -35,14 +35,16 @@ def getDataPoint(quote):
+     stock = quote['stock']
+     bid_price = float(quote['top_bid']['price'])
+     ask_price = float(quote['top_ask']['price'])
+-    price = bid_price
++    price = (bid_price + ask_price) / 2
+     return stock, bid_price, ask_price, price
+ 
+ 
+ def getRatio(price_a, price_b):
+     """ Get ratio of price_a and price_b """
+     """ ------------- Update this function ------------- """
+-    return 1
++    if (price_b == 0):
++        return
++    return price_a / price_b
+ 
+ 
+ # Main
+@@ -52,8 +54,10 @@ if __name__ == "__main__":
+         quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
+ 
+         """ ----------- Update to get the ratio --------------- """
++        prices = {}
+         for quote in quotes:
+             stock, bid_price, ask_price, price = getDataPoint(quote)
++            prices[stock] = price
+             print("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
+ 
+-        print("Ratio %s" % getRatio(price, price))
++        print("Ratio %s" % getRatio(prices['ABC'], prices['DEF']))
+-- 
+2.34.1
+
diff --git a/client3.py b/client3.py
index 864d171..3237973 100644
--- a/client3.py
+++ b/client3.py
@@ -32,6 +32,17 @@ N = 500
 def getDataPoint(quote):
     """ Produce all the needed values to generate a datapoint """
     """ ------------- Update this function ------------- """
+    keys = ('top_ask', 'timestamp', 'top_bid', 'id', 'stock')
+    for key in keys:
+        if key not in quote:
+            raise Exception("key not in quote")
+    if ('price' not in quote['top_ask'] or 'price' not in quote['top_bid'] or
+            'size' not in quote['top_ask'] or 'size' not in quote['top_bid']):
+        raise Exception("price not in quote")
+    if quote['top_ask']['price'] <= 0 or quote['top_bid']['price'] <= 0:
+        raise Exception("price is not positive")
+    if quote['top_ask']['size'] < 0 or quote['top_bid']['size'] < 0:
+        raise Exception("size is negative")
     stock = quote['stock']
     bid_price = float(quote['top_bid']['price'])
     ask_price = float(quote['top_ask']['price'])
@@ -42,8 +53,8 @@ def getDataPoint(quote):
 def getRatio(price_a, price_b):
     """ Get ratio of price_a and price_b """
     """ ------------- Update this function ------------- """
-    if (price_b == 0):
-        return
+    if (price_b <= 0) or (price_a <= 0):
+        raise Exception("price is not positive")
     return price_a / price_b
 
 
@@ -56,7 +67,11 @@ if __name__ == "__main__":
         """ ----------- Update to get the ratio --------------- """
         prices = {}
         for quote in quotes:
-            stock, bid_price, ask_price, price = getDataPoint(quote)
+            try:
+                stock, bid_price, ask_price, price = getDataPoint(quote)
+            except Exception as e:
+                print(e)
+                continue
             prices[stock] = price
             print("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
 
diff --git a/client_test.py b/client_test.py
index af2bf26..7946eda 100644
--- a/client_test.py
+++ b/client_test.py
@@ -1,24 +1,81 @@
 import unittest
-from client3 import getDataPoint
+from client3 import getDataPoint, getRatio
+
 
 class ClientTest(unittest.TestCase):
-  def test_getDataPoint_calculatePrice(self):
-    quotes = [
-      {'top_ask': {'price': 121.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
-      {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
-    ]
-    """ ------------ Add the assertion below ------------ """
+    def test_getDataPoint_calculatePrice(self):
+        quotes = [
+            {'top_ask': {'price': 121.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453',
+             'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
+            {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453',
+             'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
+        ]
+        """ ------------ Add the assertion below ------------ """
+        for quote in quotes:
+            self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'],
+                                                   (quote['top_bid']['price'] + quote['top_ask']['price']) / 2))
+
+    def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
+        quotes = [
+            {'top_ask': {'price': 119.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453',
+             'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
+            {'top_ask': {'price': 10, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453',
+             'top_bid': {'price': 20, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
+        ]
+        """ ------------ Add the assertion below ------------ """
+        for quote in quotes:
+            self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'],
+                                                   (quote['top_bid']['price'] + quote['top_ask']['price']) / 2))
+
+    """ ------------ Add more unit tests ------------ """
 
-  def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
-    quotes = [
-      {'top_ask': {'price': 119.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
-      {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
-    ]
-    """ ------------ Add the assertion below ------------ """
+    def test_getDataPoint_none(self):
+        self.assertRaises(Exception, getDataPoint, [])
+        self.assertRaises(Exception, getDataPoint, {})
+        self.assertRaises(Exception, getDataPoint, 5)
+        quotes = [
+            {'top_as': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453',
+             'top_bid': {'price': -117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'},
+            {'top_ask': {'pric': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453',
+             'top_bid': {'price': -117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'},
+            {'top_ask': {'price': 121.68, 'siz': 4}, 'timestamp': '2019-02-11 22:06:30.572453',
+             'top_bid': {'price': -117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'},
+            {'top_ask': {'price': 121.68, 'size': 4}, 'timestam': '2019-02-11 22:06:30.572453',
+             'top_bid': {'price': -117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'},
+            {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453',
+             'top_bi': {'price': -117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'},
+            {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453',
+             'top_bid': {'pric': -117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'},
+            {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453',
+             'top_bid': {'price': -117.87, 'siz': 81}, 'id': '0.109974697771', 'stock': 'DEF'},
+            {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453',
+             'top_bid': {'price': -117.87, 'size': 81}, 'i': '0.109974697771', 'stock': 'DEF'},
+            {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453',
+             'top_bid': {'price': -117.87, 'size': 81}, 'id': '0.109974697771', 'stoc': 'DEF'},
+        ]
+        for quote in quotes:
+            self.assertRaises(Exception, getDataPoint, quote)
 
+    def test_getDataPoint_negative(self):
+        quotes = [
+            {'top_ask': {'price': -121.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453',
+             'top_bid': {'price': -120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
+            {'top_ask': {'price': -121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453',
+             'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'},
+            {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453',
+             'top_bid': {'price': -117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
+        ]
+        for quote in quotes:
+            self.assertRaises(Exception, getDataPoint, quote)
 
-  """ ------------ Add more unit tests ------------ """
+    def test_getRatio_is_zero(self):
+        self.assertRaises(Exception, getDataPoint, 5, 0)
+        self.assertRaises(Exception, getDataPoint, 0, 5)
 
+    def test_getRatio_negative(self):
+        self.assertRaises(Exception, getDataPoint, -5, 5)
+        self.assertRaises(Exception, getDataPoint, 5, -5)
+        self.assertRaises(Exception, getDataPoint, -5, -5)
 
 
 if __name__ == '__main__':
-- 
2.34.1

